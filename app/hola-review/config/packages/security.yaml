security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    encoders:
        # use your user class name here
        App\Entity\User:
            # Use native password encoder
            # This value auto-selects the best possible hashing algorithm
            # (i.e. Sodium when available).
            algorithm: bcrypt
            cost: 5
    firewalls:
        api:
            pattern: ^/api/
            stateless: true
            http_basic:
                provider: app_user_provider
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: users_in_memory
            logout:
                path: app_logout
                target: /
                invalidate_session: true
            guard:
                authenticators:
                    - App\Security\LoguinFormAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/page/1, roles: ROLE_PAGE_1 }
        - { path: ^/page/2, roles: ROLE_PAGE_2 }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/api, roles: ROLE_ADMIN,  methods: [POST, PUT, DELETE]  }
        #- { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    role_hierarchy:
        ADMIN: [ROLE_PAGE_1,ROLE_PAGE_2]
